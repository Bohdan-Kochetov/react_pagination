{"version":3,"sources":["Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","state","this","props","total","perPage","page","totalPage","arr","lastPage","Math","ceil","i","push","countPage","className","map","number","type","classNames","active","onClick","changePage","React","Component","App","value","setState","title","onChange","event","currentTarget","disabled","ReactDOM","render","document","getElementById"],"mappings":"gPAqBO,IAAMA,EAAb,4MACEC,MAAQ,GADV,4CAGE,WAAU,IAAD,OACP,EAAiCC,KAAKC,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,KAClBC,EAhBV,SAAmBH,EAAeC,GAIhC,IAHA,IAAMG,EAAM,GACNC,EAAWC,KAAKC,KAAKP,EAAQC,GAE1BO,EAAI,EAAGA,GAAKH,EAAUG,GAAK,EAClCJ,EAAIK,KAAKD,GAGX,OAAOJ,EAQaM,CAAUV,EAAOC,GAEnC,OACE,oBAAIU,UAAU,OAAd,SACGR,EAAUS,KAAI,SAAAC,GACb,OACE,oBAAiBF,UAAU,OAA3B,SACE,wBACEG,KAAK,SACLH,UAAWI,IAAW,CAAEC,OAASd,IAASW,IAC1CI,QAAS,WACP,EAAKlB,MAAMmB,WAAWL,IAJ1B,SAOGA,KARIA,YAXrB,GAAgCM,IAAMC,WChBzBC,EAAb,4MACExB,MAAQ,CACNG,MAAO,GACPC,QAAS,EACTC,KAAM,GAJV,EAOEgB,WAAa,SAACI,GACZ,EAAKC,SAAS,CAAErB,KAAMoB,KAR1B,EAWEE,MAAQ,WACN,MAAiC,EAAK3B,MAA9BG,EAAR,EAAQA,MAAOE,EAAf,EAAeA,KAAMD,EAArB,EAAqBA,QAErB,MAAM,GAAN,OAAWA,EAAUC,GAASD,EAAU,GAAxC,cAAiDA,EAAUC,EAAOF,EAASA,EAAQC,EAAUC,EAA7F,eAAwGF,IAd5G,4CAiBE,WAAU,IAAD,OACP,EAA2BF,KAAKD,MAAxBG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACTC,EAASJ,KAAKD,MAAdK,KAEN,OACE,8CAEG,MACD,yBACEoB,MAAOrB,EACPwB,SACE,SAAAC,GACE,EAAKH,SAAS,CACZtB,QAASyB,EAAMC,cAAcL,MAC7BpB,KAAM,KANd,UAWE,wBAAQoB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAEF,qBAAKX,UAAU,QAAf,SAEIb,KAAK0B,UAKT,sBAAKb,UAAU,MAAf,UACE,wBACEG,KAAK,SACLH,UAAWI,IAAW,CAAEa,SAAmB,IAAT1B,IAClCe,QAAS,WACP,EAAKM,SAAS,CAAErB,KAAMA,GAAQ,KAJlC,kBAUA,cAAC,EAAD,CACEF,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNgB,WAAYpB,KAAKoB,aAGnB,wBACEJ,KAAK,SACLH,UAAWI,IAAW,CAAEa,SAAU1B,IAASI,KAAKC,KAAKP,EAAQC,KAC7DgB,QAAS,WACP,EAAKM,SAAS,CAAErB,KAAMA,GAAQ,KAJlC,4BAlEV,GAAyBiB,IAAMC,WCF/BS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a2b57ef7.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  page: number\n  changePage: (value: number) => void\n}\n\nfunction countPage(total: number, perPage: number): number[] {\n  const arr = [];\n  const lastPage = Math.ceil(total / perPage);\n\n  for (let i = 1; i <= lastPage; i += 1) {\n    arr.push(i);\n  }\n\n  return arr;\n}\n\nexport class Pagination extends React.Component<Props, {}> {\n  state = {};\n\n  render() {\n    const { total, perPage, page } = this.props;\n    const totalPage = countPage(total, perPage);\n\n    return (\n      <ul className=\"list\">\n        {totalPage.map(number => {\n          return (\n            <li key={number} className=\"item\">\n              <button\n                type=\"button\"\n                className={classNames({ active: (page === number) })}\n                onClick={() => {\n                  this.props.changePage(number);\n                }}\n              >\n                {number}\n\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport classNames from 'classnames';\nimport { Pagination } from './Pagination';\n\nexport class App extends React.Component<{}, {}> {\n  state = {\n    total: 42,\n    perPage: 3,\n    page: 1,\n  };\n\n  changePage = (value: number) => {\n    this.setState({ page: value });\n  };\n\n  title = () => {\n    const { total, page, perPage } = this.state;\n\n    return `${(perPage * page) - (perPage - 1)} - ${(perPage * page > total) ? total : perPage * page} of ${total}`;\n  };\n\n  render() {\n    const { total, perPage } = this.state;\n    let { page } = this.state;\n\n    return (\n      <>\n        Count:\n        {'   '}\n        <select\n          value={perPage}\n          onChange={\n            event => {\n              this.setState({\n                perPage: event.currentTarget.value,\n                page: 1,\n              });\n            }\n          }\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n        <div className=\"title\">\n          {\n            this.title()\n          }\n\n        </div>\n\n        <div className=\"box\">\n          <button\n            type=\"button\"\n            className={classNames({ disabled: page === 1 })}\n            onClick={() => {\n              this.setState({ page: page -= 1 });\n            }}\n          >\n            prew\n\n          </button>\n          <Pagination\n            total={total}\n            perPage={perPage}\n            page={page}\n            changePage={this.changePage}\n          />\n\n          <button\n            type=\"button\"\n            className={classNames({ disabled: page === Math.ceil(total / perPage) })}\n            onClick={() => {\n              this.setState({ page: page += 1 });\n            }}\n          >\n            next\n\n          </button>\n        </div>\n\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}